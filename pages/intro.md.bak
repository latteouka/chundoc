---
---

# About

## 我是誰？

我是蔡亦竣，做了約 7 年的警察，在年齡將屆 30 歲時決定跳離舒適圈，主動提出離職，希望能尋找到自己真正想做的工作。

自警察大學畢業後，我被分發至基隆市警察局資訊室從事資訊工作，兩年後考取刑事警察局，工作以偵辦刑事案件為主。
刑事局屬於中央單位，偵辦案件時是獨立作戰，需要自己掌握、規劃整個案件的偵辦時程，經常與地檢署檢察官、法院法官溝通聯繫，現場蒐證或執行案件時則要以幹部身份規劃管理，才能與各地方單位協調運作。
警察工作最大的收穫除了硬性的抗壓性外，更重要的是軟性的與人相處、溝通以及公關的能力，從事自由的外勤工作也讓我從內向個性轉為較外向的人。

在工作之餘，我持續學習自己有興趣的技能，如程式設計、日文、攝影等，除了培養獨立自主學習的能力，尤其程式設計經常在工作上運用，也能依照同事的需求[開發工具](https://cibtools.chundev.com/)。
我也愛好閱讀，大量的閱讀經驗讓我保有獨立思考的能力，並能以更多不同的角度看事情。

## 為什麼離職公務員？

在大量閱讀的過程中，我越來越嚮往能夠累積技能、偏向創作性的工作，也不斷想像自己人生的目的，希望能尋找到自己的**熱情**所在。這雖然是個老套的問題，也並不是每個人都會去思考或為其煩惱，但對當時就要 30 歲的我來說，這課題卻在心中膨脹到了一個高點。

公務員固然也有能力的累積，但對我來說少有成長的感覺，整體環境偏向安逸，即使在工作之餘學習了不同領域技能，但卻無法隨著工作一同成長。也因為組織不像公司是以獲利為目標，非效率、非必要的工作也相對較多。

即使要確認自己到底想做什麼也是一件困難的事情，在越來越徬徨的情況之下，我決定先離開再作打算。

## 為什麼想做軟體工程師？

在離職後我刻意接觸了不同領域，如日文翻譯、咖啡廳經營、室內空間攝影等，最終卻發現我最熟悉也喜歡的程式設計或許就是答案。

在國中時，看著當時的電腦雜誌與書籍，架設了一個 php 的小論壇給班上同學在上面聊天。高中時電腦課後跑到書局繼續翻找程式語言的書。大學時程式課的期末考上發現寫完後還有很多時間，開始東湊西湊題目的內容觀察數字的變化。步入社會後，工作閒暇之餘學了當時很紅的 Ruby on Rails、Python 等，後來配合工作上的需求，也寫了許多小程式輔助工作。即使在離職後，因為工具仍然有同事在使用，也不時會有更新的需求。

我的人生中，寫程式在不同階段都曾出現，我也總是很樂意花時間去研究、去解決問題。寫程式時我也很容易就可以進入心流（Flow）狀態，我決定朝這個領域投注更多心力。

## 前後端學習經驗

### React

- 學了 React 之後，我發現自己可以在網頁上做到很多事情。在還沒學 React Native 之前，我把 [JPBOX](https://apps.apple.com/tw/app/jpbox/id1597878658) 背單字 APP
  用網頁的方式呈現（Single Page App），在這時因為有全端的需求，也接觸了後端的 Node.js、Express.js、GraphQL、PostgreSQL、CouchDB（同步為強項的 NoSQL DB）、MongoDB 等等，
  這階段最煩惱我的是資料庫與 ORM 選擇及串接金流（綠界），有比較多偏向後端的作業。

- 後來發現使用者果然還是喜歡手機 APP 的形式，於是學習 React Native 並將網頁版時的邏輯放入，並學習如何在雙平台上架。後來也另外寫了跟讀功能的 APP [ドラシャ](https://apps.apple.com/nl/app/%E3%83%89%E3%83%A9%E3%82%B7%E3%83%A3/id1641046164)上架。

- 在建立 React 專案上，我很喜歡 Next.js 這個全端框架，在學會使用 API Route 之後，需求沒有超出的狀況下我可以不用另外架設後端主機，享受在同一個專案底下開發的便利。

### Typescript

一開始使用 typescript 是一件有點挫折的事情，但在熟悉後反而不能沒有它，甚至讓一切都 type safe 成為了一個開發時的樂趣。透過 tRPC 可以讓整個專案全端 type safe，因為我都是個人開發，在不一定要用 Restful API 的狀況下，這樣的開發經驗非常迷人。

### Styling

- 從大家一定會先學到的 styled-component、到 TailwindCSS、Chakra UI，再回歸到比 styled-component 更輕巧快速的 Stitches，很喜歡 TailwindCSS 帶來的高度彈性與不用太多來回翻查優點。

- 動畫上很喜歡 [GSAP](https://greensock.com/gsap/)的寫法，但他有些場合如 unmount 會需要用其他函式庫較好處理如 [react-spring](https://www.react-spring.dev/)。

### Datebase

在使用過不同類型函式庫後，最終我多使用 PostgreSQL 或 MySQL 搭配 Prisma，恰好前述 t3-stack 在 DB 與 Styling 上也是做出相同選擇，讓我相信自己的學習及思考歷程還算正確。

### THREE

偶然接觸到 3D 後，從 three.js 到 r3f，在網路上看見了許多許多充滿驚奇的作品，雖然直接寫 three.js 比較能看出整體邏輯，但由於 r3f 可以節省非常多時間，且可以用 declarative 的方式開發，我透過改寫 r3f 的方式，體會兩者轉換的過程，以及進入 React 後在生命週期上需要注意的地方。

### WebRTC

好奇 Google Meet 為什麼能在網頁上就運作 Zoom、Webex 等會議軟體的行為，發現自己也能透過 WebRTC 在 Web App 中做到一樣的事情，於是嘗試在 App 中實作視訊、語音、螢幕共享等功能。

### Linux

- 由於 Next.js 非純前端框架，學會如何自行部署雲端主機、Nginx Proxy 設定等。
- 熟悉 Linux 基本指令的使用，使用 NVIM 作為 IDE，熟悉 Vim 及 Tmux 操作。

<img
src={require('../static/img/nvim.png').default}
style={{width: '600px'}}
alt="nvim"
/>

## 為什麼喜歡 3D？

我不會畫畫，所以才接觸了攝影，而接觸 3D 之後，我發現自己不用懂太多作畫的原理，也能在 Blender 裡 Render 出一些簡單漂亮的圖，當想要不只是圖又能讓 3D 模型[互動](https://www.lecoeur-patisserie.com/index2)時，Three.js 就登場了，
這一切都讓我感到好新鮮與充滿可能性。

<img
src={require('../static/img/lecoeur_blender.png').default}
style={{width: '400px'}}
alt="lecoeur_blender"
/>

## 我的優勢

### 紀錄

需要學習的東西太多太多，不可能把所有東西都記在腦袋，所以我喜歡把可能再次用到的東西記錄下，快速找到學過的東西並重複利用。

紀錄也幫助我整理自己的思考過程。

### 邏輯

我喜歡搞清楚事情背後運作的原理，這也是我主動學習的動力。

### 持續學習

我對沒有在學新東西會感到有點焦慮，比起娛樂我更喜歡閱讀或是學習，英文與日文我也持續靠有聲書或 Podcast 維持聽力的練習。

## 我的弱點

### 尚缺經驗

我還沒有從事正職軟體工程師的經驗，所以我也沒有正式的 Project 可以在作品集中分享。

但還是可以從我嘗試做過的東西中，看看我試著掌握的能力。

### 團隊協作

看過 Git 協作教學，也很常用 Git，但我沒有真正用 Git 團隊協作的經驗，這點我會需要在實際工作後加緊學習。

我沒有跟後台工程師合作經驗，但我知道如何使用 Restful API，也有自己寫 Backend 的經驗。

## 結語

我很喜歡畢卡索的一句話：

> “I am always doing things I can't do, that's how I get to do them.” ― Pablo Picasso.

寫程式就給我這樣的感覺，我可以一直學會新的東西，同時也在創造可以給別人使用的產品。

在接觸 3D 以後，我發現網頁的需求不侷限在 HTML、CSS 上，在 Canvas 上更多的可能性及互動體驗，是前端工程師值得投入的方向，也能持續累積更多技能。
